% GSA code v1.1.
% Generated by Esmat Rashedi, 2010. 
% "	E. Rashedi, H. Nezamabadi-pour and S. Saryazdi,
% “GSA: A Gravitational Search Algorithm”, Information sciences, vol. 179,
% no. 13, pp. 2232-2248, 2009."
%
% Main function for using GSA algorithm.
% clear all;
clc
%  inputs:
% N:  Number of agents.
% max_it: Maximum number of iterations (T).
% ElitistCheck: If ElitistCheck=1, algorithm runs with eq.21 and if =0, runs with eq.9.
% Rpower: power of 'R' in eq.7.
% F_index: The index of the test function. See tables 1,2,3 of the mentioned article.
%          Insert your own objective function with a new F_index in 'test_functions.m'
%          and 'test_functions_range.m'.
%  outputs:
% Fbest: Best result. 
% Lbest: Best solution. The location of Fbest in search space.
% BestChart: The best so far Chart over iterations. 
% MeanChart: The average fitnesses Chart over iterations.
all_sols = cell(1, 30);
all_A = zeros(1, 30);
all_Bestcost = cell(1, 30);
for iteration = 1:30
tic
load LSU20
 N=100; 
 max_it=100000;
 ElitistCheck=0; Rpower=1;
 min_flag=1; % 1: minimization, 0: maximization

 F_index=24;
 [Fbest,Lbest,BestChart,MeanChart]=GSA(F_index,N,max_it,ElitistCheck,min_flag,Rpower);

%  semilogy(BestChart,'--k');
%  title(['\fontsize{12}\bf F',num2str(F_index)]);
%  xlabel('\fontsize{12}\bf Iteration');ylabel('\fontsize{12}\bf Best-so-far');
%  legend('\fontsize{10}\bf GSA');
 [out,sol,v] = my_3Dgps_network(Lbest,LSU20);
 A = toc;
all_sols{iteration} = sol;
    all_A(iteration) = A;
    all_Bestcost{iteration} = BestChart';
    BestCost = cell2mat(all_Bestcost);
    ALLCOOR = cell2mat(all_sols);
end

figure('Position', [100, 100, 800, 650]);
%plot(BestCost,'LineWidth',2);
semilogy(BestCost,'LineWidth',2);
xlabel('Iteration', 'FontSize', 15);
ylabel('Best Cost', 'FontSize', 15);
title('GSA Performance - 30 times', 'FontSize', 15);

grid on;



